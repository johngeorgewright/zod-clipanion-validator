name: Pull Request

on:
  pull_request:

  workflow_call:
    inputs:
      build:
        description: Should it test by building?
        required: false
        default: true
        type: boolean

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18, 20, 22]

    steps:
      - name: Checkout project
        uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Yarn
        run: yarn install --immutable

      - name: Build
        run: yarn build

      - name: Test
        run: yarn test

  test-importing:
    name: Test importing
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
      - name: Checkout project
        uses: actions/checkout@v4
        with:
          path: zod-clipanion-validator

      - name: Checkout project
        uses: actions/checkout@v4
        with:
          path: test-project

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Build zod-clipanion-validator
        working-directory: zod-clipanion-validator
        run: | # shell
          yarn --immutable
          yarn build

      - name: Rename project
        working-directory: test-project
        run: | # shell
          cat package.json | jq '.name = "test-project"' > package-rename.json
          mv package-rename.json package.json
          yarn --no-immutable

      - name: Install zod-clipanion-validator
        working-directory: test-project
        run: | # shell
          yarn link --private ../zod-clipanion-validator
          cat package.json | jq '.dependencies["zod-clipanion-validator"] = "*"' > package-dep.json
          mv package-dep.json package.json
          yarn --no-immutable

      - name: Test zod-clipanion-validator as an install module
        working-directory: test-project
        run: yarn test
